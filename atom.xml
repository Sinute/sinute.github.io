<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>日常</title>
  
  <subtitle>ニチジョウ</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://nichijou.me/"/>
  <updated>2020-06-06T11:46:01.123Z</updated>
  <id>https://nichijou.me/</id>
  
  <author>
    <name>Sinute</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NUC8i5BEK开箱</title>
    <link href="https://nichijou.me/2020/06/06/NUC8i5BEK%E5%BC%80%E7%AE%B1/"/>
    <id>https://nichijou.me/2020/06/06/NUC8i5BEK%E5%BC%80%E7%AE%B1/</id>
    <published>2020-06-06T05:42:02.000Z</published>
    <updated>2020-06-06T11:46:01.123Z</updated>
    
    <content type="html"><![CDATA[<p>其实 NUC8 用了也有几个月了，原来配的 2 * 16G 的内存在4台虚拟机下稍显有点吃力。查了一下发现虽然 Intel 官方给出的规格中最大内存只支持到32G，但是网上有人试了下64G也完全没问题 ∑(ﾟДﾟ)。趁着618活动赶紧下单了2条32G，顺便补个开箱 ಥ_ಥ</p><p><img src="https://img.nichijou.me/20200606181609.jpeg" alt=""></p><a id="more"></a><p>型号是 NUC8i5BEK ，2020-03-18于京东入手。其实本来是想等10代NUC的，结果一方面10代U提升不大，显卡对比8代不升反降，另一方面NUC8折扣实在太大 _(:з」∠)_ ，京东 2499 的价格只比闲鱼贵了 250 左右，多个京东保修还是挺香的。先用上车8代，希望 NUC11 的 Tiger Lake 给力吧。</p><p><img src="https://img.nichijou.me/20200606181603.jpeg" alt=""></p><p>正面最左边是硬盘灯，中间是2个 USB3.1 接口（黄色的口支持关机充电），USB 接口右边是 3.5mm 耳机插口，最右边是电源键。</p><p><img src="https://img.nichijou.me/20200606181557.jpeg" alt=""></p><p>背后1个 HDMI2.0a，1个千兆网口， 2个 USB3.1接口，1个雷电3接口。可惜雷电口不能作为电源输入，只能通过比 NUC 本体还大的DC电源输入。</p><p><img src="https://img.nichijou.me/20200606181551.jpeg" alt=""></p><p>内部构造。我买的是薄款，厚款在顶盖上还可以加装一块2.5英寸硬盘。</p><p><img src="https://img.nichijou.me/20200606181542.png" alt=""></p><p>最后，可以正常识别 64G 内存，使用也完全正常。最大频率被限制在2400MHz，京东3200频的32G内存比2666频的贵了50%，这边还是建议省点钱用2666，说不定等 NUC11 出来的时候32G也白菜价了呢 ಥ_ಥ</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实 NUC8 用了也有几个月了，原来配的 2 * 16G 的内存在4台虚拟机下稍显有点吃力。查了一下发现虽然 Intel 官方给出的规格中最大内存只支持到32G，但是网上有人试了下64G也完全没问题 ∑(ﾟДﾟ)。趁着618活动赶紧下单了2条32G，顺便补个开箱 ಥ_ಥ&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.nichijou.me/20200606181609.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="瞎折腾" scheme="https://nichijou.me/categories/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
    
      <category term="NUC8" scheme="https://nichijou.me/tags/NUC8/"/>
    
  </entry>
  
  <entry>
    <title>更改windows键位</title>
    <link href="https://nichijou.me/2020/05/24/%E6%9B%B4%E6%94%B9windows%E9%94%AE%E4%BD%8D/"/>
    <id>https://nichijou.me/2020/05/24/%E6%9B%B4%E6%94%B9windows%E9%94%AE%E4%BD%8D/</id>
    <published>2020-05-24T08:01:40.000Z</published>
    <updated>2020-06-06T11:46:37.036Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>Windows 10</p></blockquote><p>最近发现 Windows Terminal 正式版发布了， ssh 到 linux 服务器试了下感觉还不错，至少不再有原来奇奇怪怪的快捷键和排版问题了，默认的字体样式也还阔以233。简单配置了一下打算把吃灰的 windows 当作备用开发机。然而发现习惯了 mac 下把 <code>CapsLock</code> 映射为 <code>Ctrl</code> ， windows 下老是按错，于是乎查了一下解决办法。</p><a id="more"></a><h2 id="先说解决方法"><a href="#先说解决方法" class="headerlink" title="先说解决方法"></a>先说解决方法</h2><p><code>win + r</code> ， 输入 <code>regedit</code> ， 打开注册表编辑器，找到 <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout</code> ， 新建二进制值 <code>ScanCode Map</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0000 0000 0000 0000</span><br><span class="line">0200 0000 1D00 3A00</span><br><span class="line">0000 0000</span><br></pre></td></tr></table></figure><p><img src="https://img.nichijou.me/20200524165207.PNG" alt=""></p><p>保存重启即可</p><h2 id="然后说说原理"><a href="#然后说说原理" class="headerlink" title="然后说说原理"></a>然后说说原理</h2><p><code>ScanCode Map</code> 的格式为</p><p><img src="https://img.nichijou.me/20200524170547.png" alt=""></p><blockquote><p>二进制值采用 <a href="https://zh.wikipedia.org/zh-hans/%E5%AD%97%E8%8A%82%E5%BA%8F" target="_blank" rel="noopener">小端序</a></p></blockquote><ul><li>前8个字节为版本信息</li><li>接着4个字节为需要映射的按键个数（从2开始，即映射1个此处为2，映射2个此处为3）</li><li>紧跟着就是N段4个字节的映射关系（N和上一步中填写的映射个数有关），前2个字节为映射后的键盘扫描码，后2个字节为映射前的键盘扫描码</li><li>最后4个字节全0结束</li></ul><p><del>至于为什么从2开始，我个人无责任猜测：因为最后还有4字节的结束符，因此这边的大小 * 4字节刚好就是整段大小</del></p><p>例：</p><p>在 <code>CapsLock</code> 映射为 <code>Ctrl</code> 的基础上，同时把 <code>Ctrl</code> 映射为 <code>CapsLock</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0000 0000 0000 0000</span><br><span class="line">0300 0000 1D00 3A00</span><br><span class="line">3A00 1D00 0000 0000</span><br></pre></td></tr></table></figure><h2 id="最后是所有的键盘扫描码"><a href="#最后是所有的键盘扫描码" class="headerlink" title="最后是所有的键盘扫描码"></a>最后是所有的键盘扫描码</h2><table><thead><tr><th>#</th><th>X(Set 2)</th><th>keycap</th></tr></thead><tbody><tr><td>1</td><td>29</td><td>` ~</td></tr><tr><td>2</td><td>02</td><td>1 !</td></tr><tr><td>3</td><td>03</td><td>2 @</td></tr><tr><td>4</td><td>04</td><td>3 #</td></tr><tr><td>5</td><td>05</td><td>4 $</td></tr><tr><td>6</td><td>06</td><td>5 % E</td></tr><tr><td>7</td><td>07</td><td>6 ^</td></tr><tr><td>8</td><td>08</td><td>7 &amp;</td></tr><tr><td>9</td><td>09</td><td>8 *</td></tr><tr><td>10</td><td>0a</td><td>9 (</td></tr><tr><td>11</td><td>0b</td><td>0 )</td></tr><tr><td>12</td><td>0c</td><td>- _</td></tr><tr><td>13</td><td>0d</td><td>= +</td></tr><tr><td>15</td><td>0e</td><td>Backspace</td></tr><tr><td>16</td><td>0f</td><td>Tab</td></tr><tr><td>17</td><td>10</td><td>Q</td></tr><tr><td>18</td><td>11</td><td>W</td></tr><tr><td>19</td><td>12</td><td>E</td></tr><tr><td>20</td><td>13</td><td>R</td></tr><tr><td>21</td><td>14</td><td>T</td></tr><tr><td>22</td><td>15</td><td>Y</td></tr><tr><td>23</td><td>16</td><td>U</td></tr><tr><td>24</td><td>17</td><td>I</td></tr><tr><td>25</td><td>18</td><td>O</td></tr><tr><td>26</td><td>19</td><td>P</td></tr><tr><td>27</td><td>1a</td><td>[ {</td></tr><tr><td>28</td><td>1b</td><td>] }</td></tr><tr><td>29</td><td>2b</td><td>\ |</td></tr><tr><td>30</td><td>3a</td><td>CapsLock</td></tr><tr><td>31</td><td>1e</td><td>A</td></tr><tr><td>32</td><td>1f</td><td>S</td></tr><tr><td>33</td><td>20</td><td>D</td></tr><tr><td>34</td><td>21</td><td>F</td></tr><tr><td>35</td><td>22</td><td>G</td></tr><tr><td>36</td><td>23</td><td>H</td></tr><tr><td>37</td><td>24</td><td>J</td></tr><tr><td>38</td><td>25</td><td>K</td></tr><tr><td>39</td><td>26</td><td>L</td></tr><tr><td>40</td><td>27</td><td>; :</td></tr><tr><td>41</td><td>28</td><td>‘ “</td></tr><tr><td>42</td><td>ff</td><td>non-US-1</td></tr><tr><td>43</td><td>1c</td><td>Enter</td></tr><tr><td>44</td><td>2a</td><td>LShift</td></tr><tr><td>46</td><td>2c</td><td>Z</td></tr><tr><td>47</td><td>2d</td><td>X</td></tr><tr><td>48</td><td>2e</td><td>C</td></tr><tr><td>49</td><td>2f</td><td>V</td></tr><tr><td>50</td><td>30</td><td>B</td></tr><tr><td>51</td><td>31</td><td>N</td></tr><tr><td>52</td><td>32</td><td>M</td></tr><tr><td>53</td><td>33</td><td>, &lt;</td></tr><tr><td>54</td><td>34</td><td>. &gt;</td></tr><tr><td>55</td><td>35</td><td>/ ?</td></tr><tr><td>57</td><td>36</td><td>RShift</td></tr><tr><td>58</td><td>1d</td><td>LCtrl</td></tr><tr><td>60</td><td>38</td><td>LAlt</td></tr><tr><td>61</td><td>39</td><td>space</td></tr><tr><td>62</td><td>e0-38</td><td>RAlt</td></tr><tr><td>64</td><td>e0-1d</td><td>RCtrl</td></tr><tr><td>75</td><td>e0-52</td><td>Insert</td></tr><tr><td>76</td><td>e0-53</td><td>Delete</td></tr><tr><td>80</td><td>e0-47</td><td>Home</td></tr><tr><td>81</td><td>e0-4f</td><td>End</td></tr><tr><td>85</td><td>e0-49</td><td>PgUp</td></tr><tr><td>86</td><td>e0-51</td><td>PgDn</td></tr><tr><td>79</td><td>e0-4b</td><td>Left</td></tr><tr><td>83</td><td>e0-48</td><td>Up</td></tr><tr><td>84</td><td>e0-50</td><td>Down</td></tr><tr><td>89</td><td>e0-4d</td><td>Right</td></tr><tr><td>90</td><td>45</td><td>NumLock</td></tr><tr><td>91</td><td>47</td><td>KP-7 / Home</td></tr><tr><td>92</td><td>4b</td><td>KP-4 / Left</td></tr><tr><td>93</td><td>4f</td><td>KP-1 / End</td></tr><tr><td>95</td><td>e0-35</td><td>KP-/</td></tr><tr><td>96</td><td>48</td><td>KP-8 / Up</td></tr><tr><td>97</td><td>4c</td><td>KP-5</td></tr><tr><td>98</td><td>50</td><td>KP-2 / Down</td></tr><tr><td>99</td><td>52</td><td>KP-0 / Ins</td></tr><tr><td>100</td><td>37</td><td>KP-*</td></tr><tr><td>101</td><td>49</td><td>KP-9 / PgUp</td></tr><tr><td>102</td><td>4d</td><td>KP-6 / Right</td></tr><tr><td>103</td><td>51</td><td>KP-3 / PgDn</td></tr><tr><td>104</td><td>53</td><td>KP-. / Del</td></tr><tr><td>105</td><td>4a</td><td>KP–</td></tr><tr><td>106</td><td>4e</td><td>KP-+</td></tr><tr><td>108</td><td>e0-1c</td><td>KP-Enter</td></tr><tr><td>110</td><td>01</td><td>Esc</td></tr><tr><td>112</td><td>3b</td><td>F1</td></tr><tr><td>113</td><td>3c</td><td>F2</td></tr><tr><td>114</td><td>3d</td><td>F3</td></tr><tr><td>115</td><td>3e</td><td>F4</td></tr><tr><td>116</td><td>3f</td><td>F5</td></tr><tr><td>117</td><td>40</td><td>F6</td></tr><tr><td>118</td><td>41</td><td>F7</td></tr><tr><td>119</td><td>42</td><td>F8</td></tr><tr><td>120</td><td>43</td><td>F9</td></tr><tr><td>121</td><td>44</td><td>F10</td></tr><tr><td>122</td><td>57</td><td>F11</td></tr><tr><td>123</td><td>58</td><td>F12</td></tr><tr><td>124</td><td>e0-37</td><td>PrtScr</td></tr><tr><td>0</td><td>54</td><td>Alt+SysRq</td></tr><tr><td>125</td><td>46</td><td>ScrollLock</td></tr><tr><td>126</td><td>e1-1d-45</td><td>Pause</td></tr><tr><td>0</td><td>e0-46</td><td>Ctrl+Break</td></tr><tr><td>0</td><td>e0-5b</td><td>LWin (USB: LGUI)</td></tr><tr><td>0</td><td>e0-5c</td><td>RWin (USB: RGUI)</td></tr><tr><td>0</td><td>e0-5d</td><td>Menu</td></tr><tr><td>0</td><td>e0-5f</td><td>Sleep</td></tr><tr><td>0</td><td>e0-5e</td><td>Power</td></tr><tr><td>0</td><td>e0-63</td><td>Wake</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;Windows 10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近发现 Windows Terminal 正式版发布了， ssh 到 linux 服务器试了下感觉还不错，至少不再有原来奇奇怪怪的快捷键和排版问题了，默认的字体样式也还阔以233。简单配置了一下打算把吃灰的 windows 当作备用开发机。然而发现习惯了 mac 下把 &lt;code&gt;CapsLock&lt;/code&gt; 映射为 &lt;code&gt;Ctrl&lt;/code&gt; ， windows 下老是按错，于是乎查了一下解决办法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
  </entry>
  
  <entry>
    <title>JMeter+InfluxDB+Grafana构建性能测试平台</title>
    <link href="https://nichijou.me/2020/05/21/JMeter-InfluxDB-Grafana%E6%9E%84%E5%BB%BA%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0/"/>
    <id>https://nichijou.me/2020/05/21/JMeter-InfluxDB-Grafana%E6%9E%84%E5%BB%BA%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0/</id>
    <published>2020-05-21T00:52:38.000Z</published>
    <updated>2020-06-06T11:47:09.090Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>CentOS 8<br>JMeter 5.3<br>InfluxDB 1.8.0<br>Grafana 7.0.0</p></blockquote><h1 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h1><p><img src="https://img.nichijou.me/20200521184841.png" alt=""></p><h4 id="JMeter"><a href="#JMeter" class="headerlink" title="JMeter"></a>JMeter</h4><p><a href="https://jmeter.apache.org/" target="_blank" rel="noopener">https://jmeter.apache.org/</a></p><p>JMeter是Apache组织开发的性能测试工具</p><h4 id="InfluxDB"><a href="#InfluxDB" class="headerlink" title="InfluxDB"></a>InfluxDB</h4><p><a href="https://www.influxdata.com/" target="_blank" rel="noopener">https://www.influxdata.com/</a></p><p>InfluxDB是一个由InfluxData开发的开源时序型数据库</p><p>在这里用于存储JMeter产生的压测数据</p><h4 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h4><p><a href="https://grafana.com/" target="_blank" rel="noopener">https://grafana.com/</a></p><p>Grafana是一个多平台的数据分析解决方案</p><p>在这里作为压测结果的可视化前端</p><a id="more"></a><h1 id="构建使用"><a href="#构建使用" class="headerlink" title="构建使用"></a>构建使用</h1><h4 id="InfluxDB-Grafana"><a href="#InfluxDB-Grafana" class="headerlink" title="InfluxDB + Grafana"></a>InfluxDB + Grafana</h4><p>官网提供了各自安装的详细方法，这边已经打包了一个开箱即用的环境，可以通过以下方式一键安装</p><blockquote><p>依赖<br>Docker Engine 17.06.0+<br>Docker Compose 1.14.0+</p><p>集成工具<br>Grafana 7.0.0<br>InfluxDB 1.8<br>Apache JMeter Dashboard</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 未安装 docker compose 需要先安装 docker compose</span></span><br><span class="line">curl -L <span class="string">"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-<span class="variable">$(uname -s)</span>-<span class="variable">$(uname -m)</span>"</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Grafana + Influxdb + JMeterDashboard 集成环境</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/Sinute/jmeter-grafana-influxdb.git</span><br><span class="line"><span class="built_in">cd</span> jmeter-grafana-influxdb</span><br><span class="line">./build.sh</span><br></pre></td></tr></table></figure><h4 id="JMeter-1"><a href="#JMeter-1" class="headerlink" title="JMeter"></a>JMeter</h4><p>JMeter如何使用不是这边的重点不再赘述</p><p>为了将结果上报 InfluxDB ，需要新增一个 BackendListener</p><p><img src="https://img.nichijou.me/20200521182814.png" alt=""></p><p>执行测试，访问 <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> , 默认用户名密码 admin:admin</p><p><img src="https://img.nichijou.me/20200521182825.png" alt=""></p><h1 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h1><h4 id="分布式性能测试"><a href="#分布式性能测试" class="headerlink" title="分布式性能测试"></a>分布式性能测试</h4><p><img src="https://img.nichijou.me/20200521185028.png" alt=""></p><p>当压测需要的并发数比较大，或者压测机性能较弱时，可以考虑分布式测试方案。</p><p><strong>jmeter-server</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./jmeter-server -Jserver.rmi.ssl.disable=<span class="literal">true</span> -Djava.rmi.server.hostname=hostname -Jserver.rmi.localport=port</span><br></pre></td></tr></table></figure><p><strong>jmeter-client</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jmeter/bin/jmeter.properties</span></span><br><span class="line">remote_hosts=hostname:port,hostname-x:port-x</span><br></pre></td></tr></table></figure><p>最后通过 jmeter-client 启动测试</p><h4 id="系统性能采集"><a href="#系统性能采集" class="headerlink" title="系统性能采集"></a>系统性能采集</h4><p>可以通过 node_exporter + prometheus + grafana 的方式构建系统监控平台，达到监控被压测服务器的目的。具体原理和 influxDB + grafana 类似，网上也有不少教程，有兴趣可以自行查找，这边不多展开。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;CentOS 8&lt;br&gt;JMeter 5.3&lt;br&gt;InfluxDB 1.8.0&lt;br&gt;Grafana 7.0.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;整体架构&quot;&gt;&lt;a href=&quot;#整体架构&quot; class=&quot;headerlink&quot; title=&quot;整体架构&quot;&gt;&lt;/a&gt;整体架构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://img.nichijou.me/20200521184841.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;JMeter&quot;&gt;&lt;a href=&quot;#JMeter&quot; class=&quot;headerlink&quot; title=&quot;JMeter&quot;&gt;&lt;/a&gt;JMeter&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://jmeter.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://jmeter.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;JMeter是Apache组织开发的性能测试工具&lt;/p&gt;
&lt;h4 id=&quot;InfluxDB&quot;&gt;&lt;a href=&quot;#InfluxDB&quot; class=&quot;headerlink&quot; title=&quot;InfluxDB&quot;&gt;&lt;/a&gt;InfluxDB&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://www.influxdata.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.influxdata.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;InfluxDB是一个由InfluxData开发的开源时序型数据库&lt;/p&gt;
&lt;p&gt;在这里用于存储JMeter产生的压测数据&lt;/p&gt;
&lt;h4 id=&quot;Grafana&quot;&gt;&lt;a href=&quot;#Grafana&quot; class=&quot;headerlink&quot; title=&quot;Grafana&quot;&gt;&lt;/a&gt;Grafana&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://grafana.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://grafana.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grafana是一个多平台的数据分析解决方案&lt;/p&gt;
&lt;p&gt;在这里作为压测结果的可视化前端&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
  </entry>
  
  <entry>
    <title>使用acme.sh申请letsencrypt泛域名证书</title>
    <link href="https://nichijou.me/2020/04/18/%E4%BD%BF%E7%94%A8acme-sh%E7%94%B3%E8%AF%B7letsencrypt%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>https://nichijou.me/2020/04/18/%E4%BD%BF%E7%94%A8acme-sh%E7%94%B3%E8%AF%B7letsencrypt%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%AF%81%E4%B9%A6/</id>
    <published>2020-04-18T15:47:45.000Z</published>
    <updated>2020-06-06T11:47:45.828Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>CentOS 8<br>nginx/1.14.1</p></blockquote><blockquote><p>参考<br><a href="https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener">https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E</a></p></blockquote><h1 id="安装-acme-sh"><a href="#安装-acme-sh" class="headerlink" title="安装 acme.sh"></a>安装 acme.sh</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h1><blockquote><p>以下3种选一种即可，通常直接使用 Http 验证</p></blockquote><h2 id="Http-验证"><a href="#Http-验证" class="headerlink" title="Http 验证"></a>Http 验证</h2><blockquote><p>适合有外部可以直接访问的服务器的情况</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d mydomain.com -d <span class="string">"*.example.com"</span> --nginx</span><br></pre></td></tr></table></figure><h2 id="DNS-API-验证"><a href="#DNS-API-验证" class="headerlink" title="DNS API 验证"></a>DNS API 验证</h2><blockquote><p>适合没有外部可以直接访问的服务器的情况，比如内网域名</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CF_Key=<span class="string">"sdfsdfsdfljlbjkljlkjsdfoiwje"</span></span><br><span class="line"><span class="built_in">export</span> CF_Email=<span class="string">"xxxx@sss.com"</span></span><br><span class="line">acme.sh --issue -d example.com -d <span class="string">"*.example.com"</span> --dns dns_cf</span><br></pre></td></tr></table></figure><h2 id="手动-DNS-验证"><a href="#手动-DNS-验证" class="headerlink" title="手动 DNS 验证"></a>手动 DNS 验证</h2><blockquote><p>和 DNS API 验证相同，差别在于需要手动添加一条 txt 解析记录</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d example.com -d <span class="string">"*.example.com"</span> --dns \</span><br><span class="line"> --yes-I-know-dns-manual-mode-enough-go-ahead-please</span><br><span class="line"></span><br><span class="line"><span class="comment"># Domains have changed.</span></span><br><span class="line"><span class="comment"># Multi domain='DNS:example.com,DNS:*.example.com'</span></span><br><span class="line"><span class="comment"># Getting domain auth token for each domain</span></span><br><span class="line"><span class="comment"># Getting webroot for domain='example.com'</span></span><br><span class="line"><span class="comment"># Getting webroot for domain='*.example.com'</span></span><br><span class="line"><span class="comment"># Add the following TXT record:</span></span><br><span class="line"><span class="comment"># Domain: '_acme-challenge.example.com'</span></span><br><span class="line"><span class="comment"># TXT value: 'xxxxxx'</span></span><br><span class="line"><span class="comment"># Please be aware that you prepend _acme-challenge. before your domain</span></span><br><span class="line"><span class="comment"># so the resulting subdomain will be: _acme-challenge.example.com</span></span><br><span class="line"><span class="comment"># Please add the TXT records to the domains, and re-run with --renew.</span></span><br><span class="line"><span class="comment"># Please add '--debug' or '--log' to check more details.</span></span><br><span class="line"><span class="comment"># See: https://github.com/acmesh-official/acme.sh/wiki/How-to-debug-acme.sh</span></span><br></pre></td></tr></table></figure><p>记录下上面的 <code>TXT value: &#39;xxxxxx&#39;</code></p><p>去 DNS 解析中，新增一条 txt 记录，域名为 <code>_acme-challenge.example.com</code>，值为 <code>xxxxxx</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --renew -d example.com -d <span class="string">"*.example.com"</span> \</span><br><span class="line"> --yes-I-know-dns-manual-mode-enough-go-ahead-please</span><br></pre></td></tr></table></figure><h1 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h1><p>新建目录存放证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/nginx/ssl/example.com</span><br></pre></td></tr></table></figure><p>安装证书</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --install-cert -d example.com \</span><br><span class="line">--key-file       /etc/nginx/ssl/example.com/key.pem  \</span><br><span class="line">--fullchain-file /etc/nginx/ssl/example.com/cert.pem \</span><br><span class="line">--reloadcmd     <span class="string">"systemctl force-reload nginx.service"</span></span><br></pre></td></tr></table></figure><h1 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h1><h2 id="新增-options-ssl-nginx-conf"><a href="#新增-options-ssl-nginx-conf" class="headerlink" title="新增 options-ssl-nginx.conf"></a>新增 options-ssl-nginx.conf</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/nginx/ssl/options-ssl-nginx.conf</span></span><br><span class="line">ssl_session_cache shared:le_nginx_SSL:10m;</span><br><span class="line">ssl_session_timeout 1440m;</span><br><span class="line"></span><br><span class="line">ssl_protocols TLSv1.2 TLSv1.3;</span><br><span class="line">ssl_prefer_server_ciphers off;</span><br><span class="line"></span><br><span class="line">ssl_ciphers <span class="string">"ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA"</span>;</span><br></pre></td></tr></table></figure><h2 id="生成-dhparam-pem"><a href="#生成-dhparam-pem" class="headerlink" title="生成 dhparam.pem"></a>生成 dhparam.pem</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl dhparam -out /etc/nginx/ssl/example.com/dhparam.pem 2048</span><br></pre></td></tr></table></figure><h2 id="修改-nginx-配置"><a href="#修改-nginx-配置" class="headerlink" title="修改 nginx 配置"></a>修改 nginx 配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># conf 中追加</span></span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    ssl_certificate /etc/nginx/ssl/example.com/cert.pem;</span><br><span class="line">    ssl_certificate_key /etc/nginx/ssl/example.com/key.pem;</span><br><span class="line">    include /etc/nginx/ssl/options-ssl-nginx.conf;</span><br><span class="line">    ssl_dhparam /etc/nginx/ssl/example.com/dhparam.pem;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$scheme</span> != <span class="string">"https"</span>)&#123;</span><br><span class="line">        <span class="built_in">return</span> 301 https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="更新-acme-sh"><a href="#更新-acme-sh" class="headerlink" title="更新 acme.sh"></a>更新 acme.sh</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;CentOS 8&lt;br&gt;nginx/1.14.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;安装-acme-sh&quot;&gt;&lt;a href=&quot;#安装-acme-sh&quot; class=&quot;headerlink&quot; title=&quot;安装 acme.sh&quot;&gt;&lt;/a&gt;安装 acme.sh&lt;/h1&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl  https://get.acme.sh | sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="acme.sh" scheme="https://nichijou.me/tags/acme-sh/"/>
    
      <category term="letsencrypt" scheme="https://nichijou.me/tags/letsencrypt/"/>
    
  </entry>
  
  <entry>
    <title>安装istio</title>
    <link href="https://nichijou.me/2020/04/18/%E5%AE%89%E8%A3%85istio/"/>
    <id>https://nichijou.me/2020/04/18/%E5%AE%89%E8%A3%85istio/</id>
    <published>2020-04-18T09:44:02.000Z</published>
    <updated>2020-06-06T11:48:26.774Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>CentOS 8<br>Kubernetes 1.18.0<br>Istio 1.5.1</p></blockquote><blockquote><p>参考<br><a href="https://istio.io/zh/docs/setup/getting-started/" target="_blank" rel="noopener">https://istio.io/zh/docs/setup/getting-started/</a></p></blockquote><h1 id="下载-Istio"><a href="#下载-Istio" class="headerlink" title="下载 Istio"></a>下载 Istio</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https:&#x2F;&#x2F;istio.io&#x2F;downloadIstio | sh -</span><br><span class="line">export PATH&#x3D;PATH&#x3D;$PWD&#x2F;istio-1.5.1&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装demo配置"><a href="#安装demo配置" class="headerlink" title="安装demo配置"></a>安装demo配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istioctl manifest apply --<span class="built_in">set</span> profile=demo</span><br></pre></td></tr></table></figure><p>查看 istio-ingressgateway 是否有对外IP</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@zeus ➜  kubectl get svc -n istio-system</span><br><span class="line">NAME                        TYPE           CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                                                                                                      AGE</span><br><span class="line">grafana                     ClusterIP      10.111.163.144   &lt;none&gt;        3000/TCP                                                                                                                                     20s</span><br><span class="line">istio-egressgateway         ClusterIP      10.96.185.62     &lt;none&gt;        80/TCP,443/TCP,15443/TCP                                                                                                                     21s</span><br><span class="line">istio-ingressgateway        LoadBalancer   10.98.84.118     &lt;pending&gt;     15020:30147/TCP,80:31083/TCP,443:32760/TCP,15029:30736/TCP,15030:31984/TCP,15031:30300/TCP,15032:32406/TCP,31400:31638/TCP,15443:30198/TCP   21s</span><br><span class="line">istio-pilot                 ClusterIP      10.99.161.128    &lt;none&gt;        15010/TCP,15011/TCP,15012/TCP,8080/TCP,15014/TCP,443/TCP                                                                                     41s</span><br><span class="line">istiod                      ClusterIP      10.111.219.124   &lt;none&gt;        15012/TCP,443/TCP                                                                                                                            41s</span><br><span class="line">jaeger-agent                ClusterIP      None             &lt;none&gt;        5775/UDP,6831/UDP,6832/UDP                                                                                                                   20s</span><br><span class="line">jaeger-collector            ClusterIP      10.101.131.86    &lt;none&gt;        14267/TCP,14268/TCP,14250/TCP                                                                                                                20s</span><br><span class="line">jaeger-collector-headless   ClusterIP      None             &lt;none&gt;        14250/TCP                                                                                                                                    20s</span><br><span class="line">jaeger-query                ClusterIP      10.107.220.77    &lt;none&gt;        16686/TCP                                                                                                                                    20s</span><br><span class="line">kiali                       ClusterIP      10.111.202.202   &lt;none&gt;        20001/TCP                                                                                                                                    19s</span><br><span class="line">prometheus                  ClusterIP      10.101.44.140    &lt;none&gt;        9090/TCP                                                                                                                                     19s</span><br><span class="line">tracing                     ClusterIP      10.104.231.92    &lt;none&gt;        80/TCP                                                                                                                                       19s</span><br><span class="line">zipkin                      ClusterIP      10.99.8.133      &lt;none&gt;        9411/TCP                                                                                                                                     19s</span><br></pre></td></tr></table></figure><p>如果 istio-ingressgateway 显示 pending，说明没有可以使用的外部负载均衡器，可以通过 <code>kubectl edit service istio-ingressgateway -n istio-system</code> 来指定一个 externalIP</p><p><img src="https://img.nichijou.me/20200420000830.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;CentOS 8&lt;br&gt;Kubernetes 1.18.0&lt;br&gt;Istio 1.5.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;https://istio.io/zh/docs/setup/getting-started/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://istio.io/zh/docs/setup/getting-started/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;下载-Istio&quot;&gt;&lt;a href=&quot;#下载-Istio&quot; class=&quot;headerlink&quot; title=&quot;下载 Istio&quot;&gt;&lt;/a&gt;下载 Istio&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -L https:&amp;#x2F;&amp;#x2F;istio.io&amp;#x2F;downloadIstio | sh -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH&amp;#x3D;PATH&amp;#x3D;$PWD&amp;#x2F;istio-1.5.1&amp;#x2F;bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="kubernetes" scheme="https://nichijou.me/tags/kubernetes/"/>
    
      <category term="istio" scheme="https://nichijou.me/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>创建NFS网络文件系统</title>
    <link href="https://nichijou.me/2020/04/18/%E5%88%9B%E5%BB%BANFS%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <id>https://nichijou.me/2020/04/18/%E5%88%9B%E5%BB%BANFS%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-04-18T08:15:35.000Z</published>
    <updated>2020-06-06T11:48:11.770Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>CentOS 8</p></blockquote><blockquote><p>参考<br><a href="https://wiki.archlinux.org/index.php/NFS_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/NFS_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p></blockquote><h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><h2 id="安装-nfs-utils"><a href="#安装-nfs-utils" class="headerlink" title="安装 nfs-utils"></a>安装 nfs-utils</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> rpcbind.service</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-server.service</span><br><span class="line"></span><br><span class="line">systemctl start rpcbind.service</span><br><span class="line">systemctl start nfs-server.service</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="创建共享目录"><a href="#创建共享目录" class="headerlink" title="创建共享目录"></a>创建共享目录</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /nfs</span><br><span class="line">chmod 755 /nfs</span><br></pre></td></tr></table></figure><h2 id="配置-nfs"><a href="#配置-nfs" class="headerlink" title="配置 nfs"></a>配置 nfs</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/exports</span></span><br><span class="line">/nfs/    192.168.0.0/16(rw,sync,no_root_squash,no_all_squash)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重启nfs-server</span></span><br><span class="line">systemctl restart nfs-server.service</span><br></pre></td></tr></table></figure><h4 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h4><ul><li>ro：共享目录只读；</li><li>rw：共享目录可读可写；</li><li>all_squash：所有访问用户都映射为匿名用户或用户组；</li><li>no_all_squash（默认）：访问用户先与本机用户匹配，匹配失败后再映射为匿名用户或用户组；</li><li>root_squash（默认）：将来访的root用户映射为匿名用户或用户组；</li><li>no_root_squash：来访的root用户保持root帐号权限；</li><li>anonuid=<UID>：指定匿名访问用户的本地用户UID，默认为nfsnobody（65534）；</li><li>anongid=<GID>：指定匿名访问用户的本地用户组GID，默认为nfsnobody（65534）；</li><li>secure（默认）：限制客户端只能从小于1024的tcp/ip端口连接服务器；</li><li>insecure：允许客户端从大于1024的tcp/ip端口连接服务器；</li><li>sync：将数据同步写入内存缓冲区与磁盘中，效率低，但可以保证数据的一致性；</li><li>async：将数据先保存在内存缓冲区中，必要时才写入磁盘；</li><li>wdelay（默认）：检查是否有相关的写操作，如果有则将这些写操作一起执行，这样可以提高效率；</li><li>no_wdelay：若有写操作则立即执行，应与sync配合使用；</li><li>subtree_check（默认） ：若输出目录是一个子目录，则nfs服务器将检查其父目录的权限；</li><li>no_subtree_check ：即使输出目录是一个子目录，nfs服务器也不检查其父目录的权限，这样可以提高效率；</li></ul><h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t nfs -o vers=4 servername:/music /mountpoint/on/client</span><br></pre></td></tr></table></figure><h2 id="通过-fstab-自动挂载"><a href="#通过-fstab-自动挂载" class="headerlink" title="通过 fstab 自动挂载"></a>通过 fstab 自动挂载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/fstab</span></span><br><span class="line">servername:/music   /mountpoint/on/client   nfs   defaults0 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;CentOS 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/NFS_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://wiki.archlinux.org/index.php/NFS_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;服务端&quot;&gt;&lt;a href=&quot;#服务端&quot; class=&quot;headerlink&quot; title=&quot;服务端&quot;&gt;&lt;/a&gt;服务端&lt;/h1&gt;&lt;h2 id=&quot;安装-nfs-utils&quot;&gt;&lt;a href=&quot;#安装-nfs-utils&quot; class=&quot;headerlink&quot; title=&quot;安装 nfs-utils&quot;&gt;&lt;/a&gt;安装 nfs-utils&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install nfs-utils&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; rpcbind.service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; nfs-server.service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl start rpcbind.service&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl start nfs-server.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="NFS" scheme="https://nichijou.me/tags/NFS/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes安装</title>
    <link href="https://nichijou.me/2020/04/05/kubernetes%E5%AE%89%E8%A3%85/"/>
    <id>https://nichijou.me/2020/04/05/kubernetes%E5%AE%89%E8%A3%85/</id>
    <published>2020-04-05T08:32:25.000Z</published>
    <updated>2020-06-06T11:49:09.780Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>CentOS 8<br>Kubernetes 1.18.0</p></blockquote><blockquote><p><a href="https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/</a></p></blockquote><h1 id="安装-kubeadm"><a href="#安装-kubeadm" class="headerlink" title="安装 kubeadm"></a>安装 kubeadm</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 SELinux 设置为 permissive 模式（相当于将其禁用）</span></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'s/^SELINUX=enforcing$/SELINUX=permissive/'</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line">yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> --now kubelet</span><br><span class="line"></span><br><span class="line">modprobe br_netfilter</span><br><span class="line">cat &lt;&lt;EOF &gt;  /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="使用-kubeadm-创建单个控制面板节点"><a href="#使用-kubeadm-创建单个控制面板节点" class="headerlink" title="使用 kubeadm 创建单个控制面板节点"></a>使用 kubeadm 创建单个控制面板节点</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=&#123;your_host&#125; \</span><br><span class="line">  --apiserver-bind-port=6443 \</span><br><span class="line">  --pod-network-cidr=10.233.0.0/16 \</span><br><span class="line">  --service-cidr=10.96.0.0/12</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><p>执行 <code>kubeadm init</code> 之后会输出类似</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a Pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  /docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of machines by running the following on each node</span><br><span class="line">as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join &lt;control-plane-host&gt;:&lt;control-plane-port&gt; --token &lt;token&gt; --discovery-token-ca-cert-hash sha256:&lt;<span class="built_in">hash</span>&gt;</span><br></pre></td></tr></table></figure><p>记录下 <code>kubeadm join &lt;control-plane-host&gt;:&lt;control-plane-port&gt; --token &lt;token&gt; --discovery-token-ca-cert-hash sha256:&lt;hash&gt;</code>，后续加入节点时会用到</p><p>token有效期为24小时，可以通过 <code>kubeadm token list</code> 查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TOKEN                     TTL         EXPIRES                     USAGES                   DESCRIPTION                                                EXTRA GROUPS</span><br><span class="line">tmxcmx.1utw7s3anszbd03z   23h         2020-04-06T16:24:03+08:00   authentication,signing   The default bootstrap token generated by <span class="string">'kubeadm init'</span>.   system:bootstrappers:kubeadm:default-node-token</span><br></pre></td></tr></table></figure><p>如果token过期，可以通过 <code>kubeadm token create</code> 生成新的token</p><p>如果你忘了 <code>--discovery-token-ca-cert-hash</code> 的值，可以通过以下命令获取</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -pubkey -<span class="keyword">in</span> /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&gt;/dev/null | \</span><br><span class="line">   openssl dgst -sha256 -hex | sed <span class="string">'s/^.* //'</span></span><br></pre></td></tr></table></figure><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><blockquote><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/" target="_blank" rel="noopener">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/</a></p></blockquote><p>默认情况下由于安全问题 pod 不会被调度到控制节点上，如果你只有一个用于测试的节点，可以执行以下命令放行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl taint nodes --all node-role.kubernetes.io/master-</span><br></pre></td></tr></table></figure><h1 id="安装-Pod-network"><a href="#安装-Pod-network" class="headerlink" title="安装 Pod network"></a>安装 Pod network</h1><p>在控制节点上执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KUBECONFIG=/etc/kubernetes/admin.conf kubectl apply -f https://raw.githubusercontent.com/cloudnativelabs/kube-router/master/daemonset/kubeadm-kuberouter.yaml</span><br></pre></td></tr></table></figure><h1 id="加入节点"><a href="#加入节点" class="headerlink" title="加入节点"></a>加入节点</h1><p>在需要加入的机器上执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join &lt;control-plane-host&gt;:&lt;control-plane-port&gt; --token &lt;token&gt; --discovery-token-ca-cert-hash sha256:&lt;<span class="built_in">hash</span>&gt;</span><br></pre></td></tr></table></figure><p>加入后在控制节点上可以通过 <code>kubectl get nodes</code> 看到新加入的节点</p><h1 id="安装Dashboard"><a href="#安装Dashboard" class="headerlink" title="安装Dashboard"></a>安装Dashboard</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc7/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># recommended.yaml</span></span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort <span class="comment"># 新增：修改为NodePort</span></span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">      nodePort: 30001 <span class="comment"># 新增：映射到节点的30001端口</span></span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f recommended.yaml</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取登陆token</span></span><br><span class="line">kubectl -n kube-system describe $(kubectl -n kube-system get secret -n kube-system -o name | grep namespace) | grep token</span><br></pre></td></tr></table></figure><p>浏览器打开 <a href="https://localhost:30001" target="_blank" rel="noopener">https://localhost:30001</a> 输入上面的 token即可登陆</p><blockquote><p>遇到 chrome 证书问题无法打开的问题，可以通过输入 <code>thisisunsafe</code> 绕过</p></blockquote><p><img src="https://img.nichijou.me/20200405202941.png" alt=""></p><h1 id="清理节点"><a href="#清理节点" class="headerlink" title="清理节点"></a>清理节点</h1><blockquote><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#tear-down" target="_blank" rel="noopener">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#tear-down</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;CentOS 8&lt;br&gt;Kubernetes 1.18.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;安装-kubeadm&quot;&gt;&lt;a href=&quot;#安装-kubeadm&quot; class=&quot;headerlink&quot; title=&quot;安装 kubeadm&quot;&gt;&lt;/a&gt;安装 kubeadm&lt;/h1&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[kubernetes]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name=Kubernetes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;enabled=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpgcheck=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repo_gpgcheck=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 将 SELinux 设置为 permissive 模式（相当于将其禁用）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setenforce 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/^SELINUX=enforcing$/SELINUX=permissive/&#39;&lt;/span&gt; /etc/selinux/config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; --now kubelet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;modprobe br_netfilter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt;  /etc/sysctl.d/k8s.conf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net.bridge.bridge-nf-call-ip6tables = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net.bridge.bridge-nf-call-iptables = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EOF&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sysctl --system&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="kubernetes" scheme="https://nichijou.me/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>CentOS关闭swap</title>
    <link href="https://nichijou.me/2020/04/05/CentOS%E5%85%B3%E9%97%ADswap/"/>
    <id>https://nichijou.me/2020/04/05/CentOS%E5%85%B3%E9%97%ADswap/</id>
    <published>2020-04-05T07:30:16.000Z</published>
    <updated>2020-04-05T12:38:37.165Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>CentOS 8</p></blockquote><blockquote><p>来源<br><a href="https://serverfault.com/questions/684771/best-way-to-disable-swap-in-linux" target="_blank" rel="noopener">https://serverfault.com/questions/684771/best-way-to-disable-swap-in-linux</a></p></blockquote><ol><li><p>执行 <code>swapoff -a</code> 关闭分区</p></li><li><p>执行 <code>free -h</code> 应该可以看到 swap 行的 total、used、free 均为0</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          7.6Gi       6.5Gi       891Mi       8.0Mi       273Mi       938Mi</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure></li><li><p>编辑 <code>/etc/fstab</code> 将 swap 相关行注释</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;CentOS 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;来源&lt;br&gt;&lt;a href=&quot;https://serverfault.com/questions/684771/be
      
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="swap" scheme="https://nichijou.me/tags/swap/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus+Grafana打造监控系统</title>
    <link href="https://nichijou.me/2020/04/05/Prometheus-Grafana%E6%89%93%E9%80%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/"/>
    <id>https://nichijou.me/2020/04/05/Prometheus-Grafana%E6%89%93%E9%80%A0%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-04-05T06:08:14.000Z</published>
    <updated>2020-06-06T11:48:38.800Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>环境</strong><br>CentOS 8</p></blockquote><h1 id="什么是-Prometheus"><a href="#什么是-Prometheus" class="headerlink" title="什么是 Prometheus"></a>什么是 Prometheus</h1><p>Prometheus 是一套开源的系统监控报警框架。它启发于 Google 的 borgmon 监控系统，由工作在 SoundCloud 的 google 前员工在 2012 年创建，作为社区开源项目进行开发，并于 2015 年正式发布。2016 年，Prometheus 正式加入 Cloud Native Computing Foundation，成为受欢迎度仅次于 Kubernetes 的项目。</p><a id="more"></a><p>作为新一代的监控框架，Prometheus 具有以下特点：</p><p>强大的多维度数据模型：<br>时间序列数据通过 metric 名和键值对来区分。<br>所有的 metrics 都可以设置任意的多维标签。<br>数据模型更随意，不需要刻意设置为以点分隔的字符串。<br>可以对数据模型进行聚合，切割和切片操作。<br>支持双精度浮点类型，标签可以设为全 unicode。<br>灵活而强大的查询语句（PromQL）：在同一个查询语句，可以对多个 metrics 进行乘法、加法、连接、取分数位等操作。<br>易于管理： Prometheus server 是一个单独的二进制文件，可直接在本地工作，不依赖于分布式存储。<br>高效：平均每个采样点仅占 3.5 bytes，且一个 Prometheus server 可以处理数百万的 metrics。<br>使用 pull 模式采集时间序列数据，这样不仅有利于本机测试而且可以避免有问题的服务器推送坏的 metrics。<br>可以采用 push gateway 的方式把时间序列数据推送至 Prometheus server 端。<br>可以通过服务发现或者静态配置去获取监控的 targets。<br>有多种可视化图形界面。<br>易于伸缩。<br>需要指出的是，由于数据采集可能会有丢失，所以 Prometheus 不适用对采集数据要 100% 准确的情形。但如果用于记录时间序列数据，Prometheus 具有很大的查询优势，此外，Prometheus 适用于微服务的体系架构。</p><h1 id="Prometheus-组成及架构"><a href="#Prometheus-组成及架构" class="headerlink" title="Prometheus 组成及架构"></a>Prometheus 组成及架构</h1><p>Prometheus 生态圈中包含了多个组件，其中许多组件是可选的：</p><ul><li><strong>Prometheus Server</strong>: 用于收集和存储时间序列数据。</li><li><strong>Client Library</strong>: 客户端库，为需要监控的服务生成相应的 metrics 并暴露给 Prometheus server。当 Prometheus server 来 pull 时，直接返回实时状态的 metrics。</li><li><strong>Push Gateway</strong>: 主要用于短期的 jobs。由于这类 jobs 存在时间较短，可能在 Prometheus 来 pull 之前就消失了。为此，这次 jobs 可以直接向 Prometheus server 端推送它们的 metrics。这种方式主要用于服务层面的 metrics，对于机器层面的 metrices，需要使用 node exporter。</li><li><strong>Exporters</strong>: 用于暴露已有的第三方服务的 metrics 给 Prometheus。</li><li><strong>Alertmanager</strong>: 从 Prometheus server 端接收到 alerts 后，会进行去除重复数据，分组，并路由到对收的接受方式，发出报警。常见的接收方式有：电子邮件，pagerduty，OpsGenie, webhook 等。</li><li>一些其他的工具。</li></ul><p>图 1 为 Prometheus 官方文档中的架构图：</p><h5 id="图-1-Prometheus-架构图"><a href="#图-1-Prometheus-架构图" class="headerlink" title="图 1. Prometheus 架构图"></a>图 1. Prometheus 架构图</h5><p><img src="https://img.nichijou.me/20200405010508.png" alt="img"></p><p>从上图可以看出，Prometheus 的主要模块包括：Prometheus server, exporters, Pushgateway, PromQL, Alertmanager 以及图形界面。</p><p>其大概的工作流程是：</p><ol><li>Prometheus server 定期从配置好的 jobs 或者 exporters 中拉 metrics，或者接收来自 Pushgateway 发过来的 metrics，或者从其他的 Prometheus server 中拉 metrics。</li><li>Prometheus server 在本地存储收集到的 metrics，并运行已定义好的 alert.rules，记录新的时间序列或者向 Alertmanager 推送警报。</li><li>Alertmanager 根据配置文件，对接收到的警报进行处理，发出告警。</li><li>在图形界面中，可视化采集数据。</li></ol><h1 id="什么是-Grafana"><a href="#什么是-Grafana" class="headerlink" title="什么是 Grafana"></a>什么是 Grafana</h1><p>Grafana可以通过可视化的方式向你呈现数据。在Grafana中，你可以通过将Prometheus添加为数据源，来将Grafana作为前端的数据展示。</p><hr><h1 id="node-exporter-安装"><a href="#node-exporter-安装" class="headerlink" title="node_exporter 安装"></a>node_exporter 安装</h1><h2 id="获取-node-exporter"><a href="#获取-node-exporter" class="headerlink" title="获取 node_exporter"></a>获取 node_exporter</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf node_exporter-0.18.1.linux-amd64.tar.gz</span><br><span class="line">mkdir -p /usr/<span class="built_in">local</span>/prom</span><br><span class="line">mv node_exporter-0.18.1.linux-amd64 /usr/<span class="built_in">local</span>/prom/node_exporter</span><br></pre></td></tr></table></figure><blockquote><p>默认监听9100端口，可通过 <code>--web.listen-address=&quot;:9100&quot;</code> 修改</p></blockquote><h2 id="创建-Systemd"><a href="#创建-Systemd" class="headerlink" title="创建 Systemd"></a>创建 Systemd</h2><blockquote><p>/etc/systemd/system/node_exporter.service</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=node_exporter</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/prom/node_exporter/node_exporter --web.listen-address=:9100</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> node_exporter</span><br><span class="line">systemctl start node_exporter</span><br></pre></td></tr></table></figure><h1 id="Prometheus-安装"><a href="#Prometheus-安装" class="headerlink" title="Prometheus 安装"></a>Prometheus 安装</h1><blockquote><p><a href="https://prometheus.io/download/" target="_blank" rel="noopener">https://prometheus.io/download/</a></p></blockquote><h2 id="获取-Prometheus"><a href="#获取-Prometheus" class="headerlink" title="获取 Prometheus"></a>获取 Prometheus</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/prometheus/releases/download/v2.17.1/prometheus-2.17.1.linux-amd64.tar.gz</span><br><span class="line">tar -zxvf prometheus-2.17.1.linux-amd64.tar.gz</span><br><span class="line">mv prometheus-2.17.1.linux-amd64 /usr/<span class="built_in">local</span>/prometheus</span><br><span class="line">mkdir -p /usr/<span class="built_in">local</span>/etc/prometheus</span><br><span class="line">cp /usr/<span class="built_in">local</span>/prometheus/prometheus.yml /usr/<span class="built_in">local</span>/etc/prometheus</span><br></pre></td></tr></table></figure><h2 id="Prometheus-配置追加-node-exporter"><a href="#Prometheus-配置追加-node-exporter" class="headerlink" title="Prometheus 配置追加 node_exporter"></a>Prometheus 配置追加 node_exporter</h2><blockquote><p>/usr/local/etc/prometheus/prometheus.yml</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">  - job_name: <span class="string">'node'</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">'localhost:9100'</span>]</span><br></pre></td></tr></table></figure><h2 id="创建-Systemd-1"><a href="#创建-Systemd-1" class="headerlink" title="创建 Systemd"></a>创建 Systemd</h2><blockquote><p>/etc/systemd/system/prometheus.service</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=prometheus</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">Group=root</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/prometheus/prometheus --config.file=/usr/<span class="built_in">local</span>/etc/prometheus/prometheus.yml</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -HUP <span class="variable">$MAINPID</span></span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> prometheus</span><br><span class="line">systemctl start prometheus</span><br></pre></td></tr></table></figure><h1 id="Grafana-安装"><a href="#Grafana-安装" class="headerlink" title="Grafana 安装"></a>Grafana 安装</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.grafana.com/oss/release/grafana-6.7.2-1.x86_64.rpm</span><br><span class="line">sudo yum install grafana-6.7.2-1.x86_64.rpm</span><br><span class="line"></span><br><span class="line">systemctl start grafana-server.service</span><br></pre></td></tr></table></figure><p>添加 Prometheus 作为数据源</p><p><img src="https://img.nichijou.me/20200405141029.png" alt=""></p><p>在 <a href="https://grafana.com/grafana/dashboards" target="_blank" rel="noopener">https://grafana.com/grafana/dashboards</a> 有相当多别人分享的 Dashboard，可以方便的导入使用</p><h1 id="监控效果"><a href="#监控效果" class="headerlink" title="监控效果"></a>监控效果</h1><p><img src="https://img.nichijou.me/20200405141947.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;br&gt;CentOS 8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;什么是-Prometheus&quot;&gt;&lt;a href=&quot;#什么是-Prometheus&quot; class=&quot;headerlink&quot; title=&quot;什么是 Prometheus&quot;&gt;&lt;/a&gt;什么是 Prometheus&lt;/h1&gt;&lt;p&gt;Prometheus 是一套开源的系统监控报警框架。它启发于 Google 的 borgmon 监控系统，由工作在 SoundCloud 的 google 前员工在 2012 年创建，作为社区开源项目进行开发，并于 2015 年正式发布。2016 年，Prometheus 正式加入 Cloud Native Computing Foundation，成为受欢迎度仅次于 Kubernetes 的项目。&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="Prometheus" scheme="https://nichijou.me/tags/Prometheus/"/>
    
      <category term="Grafana" scheme="https://nichijou.me/tags/Grafana/"/>
    
      <category term="监控" scheme="https://nichijou.me/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>关闭SELinux</title>
    <link href="https://nichijou.me/2020/03/29/%E5%85%B3%E9%97%ADSELinux/"/>
    <id>https://nichijou.me/2020/03/29/%E5%85%B3%E9%97%ADSELinux/</id>
    <published>2020-03-29T09:45:27.000Z</published>
    <updated>2020-06-06T11:33:48.945Z</updated>
    
    <content type="html"><![CDATA[<p><strong>临时关闭：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p><strong>永久关闭：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux/config</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;临时关闭：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td 
      
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="SELinux" scheme="https://nichijou.me/tags/SELinux/"/>
    
  </entry>
  
  <entry>
    <title>防止Mac合盖休眠</title>
    <link href="https://nichijou.me/2020/02/11/%E9%98%B2%E6%AD%A2Mac%E5%90%88%E7%9B%96%E4%BC%91%E7%9C%A0/"/>
    <id>https://nichijou.me/2020/02/11/%E9%98%B2%E6%AD%A2Mac%E5%90%88%E7%9B%96%E4%BC%91%E7%9C%A0/</id>
    <published>2020-02-11T07:07:02.000Z</published>
    <updated>2020-06-06T11:49:21.158Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 禁止显示器睡眠</span></span><br><span class="line">caffeinate -d</span><br><span class="line"><span class="comment"># 禁止系统睡眠</span></span><br><span class="line">caffeinate -is</span><br><span class="line"><span class="comment"># 当1000号进程存在时不睡眠</span></span><br><span class="line">caffeinate -w 1000</span><br><span class="line"><span class="comment"># 1小时内不睡眠</span></span><br><span class="line">caffeinate -t 3600</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Doc"><a href="#Doc" class="headerlink" title="Doc"></a>Doc</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># man caffeinate</span></span><br><span class="line"></span><br><span class="line">CAFFEINATE(8)             BSD System Manager<span class="string">'s Manual            CAFFEINATE(8)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">NAME</span></span><br><span class="line"><span class="string">     caffeinate -- prevent the system from sleeping on behalf of a utility</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SYNOPSIS</span></span><br><span class="line"><span class="string">     caffeinate [-disu] [-t timeout] [-w pid] [utility arguments...]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">DESCRIPTION</span></span><br><span class="line"><span class="string">     caffeinate creates assertions to alter system sleep behavior.  If no assertion flags are specified, caffeinate creates an assertion to prevent idle sleep.  If a utility is specified, caffeinate creates the assertions on the utility'</span>s behalf, and those assertions will persist <span class="keyword">for</span> the duration of the</span><br><span class="line">     utility<span class="string">'s execution. Otherwise, caffeinate creates the assertions directly, and those assertions will persist until caffeinate exits.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     Available options:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     -d      Create an assertion to prevent the display from sleeping.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     -i      Create an assertion to prevent the system from idle sleeping.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     -m      Create an assertion to prevent the disk from idle sleeping.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     -s      Create an assertion to prevent the system from sleeping. This assertion is valid only when system is running on AC power.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     -u      Create an assertion to declare that user is active. If the display is off, this option turns the display on and prevents the display from going into idle sleep. If a timeout is not specified with '</span>-t<span class="string">' option, then this assertion is taken with a default of 5 second timeout.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     -t      Specifies the timeout value in seconds for which this assertion has to be valid. The assertion is dropped after the specified timeout. Timeout value is not used when an utility is invoked with this command.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     -w      Waits for the process with the specified pid to exit. Once the the process exits, the assertion is also released.  This option is ignored when used with utility option.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EXAMPLE</span></span><br><span class="line"><span class="string">     caffeinate -i make</span></span><br><span class="line"><span class="string">        caffeinate forks a process, execs "make" in it, and holds an assertion that prevents idle sleep as long as that process is running.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SEE ALSO</span></span><br><span class="line"><span class="string">     pmset(1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">LOCATION</span></span><br><span class="line"><span class="string">     /usr/bin/caffeinate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Darwin                         November 9, 2012                         Darwin</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 禁止显示器睡眠&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;caffeinate -d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 禁止系统睡眠&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;caffeinate -is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 当1000号进程存在时不睡眠&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;caffeinate -w 1000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 1小时内不睡眠&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;caffeinate -t 3600&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="Mac" scheme="https://nichijou.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>MySQL分区使用</title>
    <link href="https://nichijou.me/2019/12/31/MySQL%E5%88%86%E5%8C%BA%E4%BD%BF%E7%94%A8/"/>
    <id>https://nichijou.me/2019/12/31/MySQL%E5%88%86%E5%8C%BA%E4%BD%BF%E7%94%A8/</id>
    <published>2019-12-31T03:39:23.000Z</published>
    <updated>2020-06-06T11:49:29.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p><strong>LIST分区</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test`</span> (</span><br><span class="line">  <span class="string">`date`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'date'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`date`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">LIST</span> (<span class="string">`date`</span>)</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">PARTITION</span> P_20191201 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">20191201</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>RANGE分区</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test`</span> (</span><br><span class="line">  <span class="string">`date`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'date'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`date`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span> (<span class="string">`date`</span>)</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">PARTITION</span> P_20191201 <span class="keyword">VALUES</span> <span class="keyword">LESS</span> <span class="keyword">THAN</span> (<span class="number">20191202</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>HASH分区</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test`</span> (</span><br><span class="line">  <span class="string">`date`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'date'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`date`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">HASH</span> (<span class="string">`date`</span>)</span><br><span class="line"><span class="keyword">PARTITIONS</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h2 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`test`</span> <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> (</span><br><span class="line">  <span class="keyword">PARTITION</span> P_20191202 <span class="keyword">VALUES</span> <span class="keyword">IN</span> (<span class="number">20191202</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`test`</span> <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> P_20191202;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建&quot;&gt;&lt;a href=&quot;#创建&quot; class=&quot;headerlink&quot; title=&quot;创建&quot;&gt;&lt;/a&gt;创建&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;LIST分区&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`test`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`date`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;date&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`date`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8 &lt;span class=&quot;keyword&quot;&gt;COLLATE&lt;/span&gt;=utf8_unicode_ci&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LIST&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`date`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;PARTITION&lt;/span&gt; P_20191201 &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;20191201&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="mysql" scheme="https://nichijou.me/tags/mysql/"/>
    
      <category term="partition" scheme="https://nichijou.me/tags/partition/"/>
    
  </entry>
  
  <entry>
    <title>Linux下各项代理设置</title>
    <link href="https://nichijou.me/2019/12/31/Linux%E4%B8%8B%E5%90%84%E9%A1%B9%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/"/>
    <id>https://nichijou.me/2019/12/31/Linux%E4%B8%8B%E5%90%84%E9%A1%B9%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</id>
    <published>2019-12-31T02:59:01.000Z</published>
    <updated>2020-06-06T11:49:41.180Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h2><p><strong>设置</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只对github生效</span></span><br><span class="line">git config --global http.https://github.com.proxy socks5://127.0.0.1:1080</span><br><span class="line"><span class="comment"># 对所有生效</span></span><br><span class="line">git config --global http.proxy http://127.0.0.1:8118</span><br><span class="line">git config --global https.proxy http://127.0.0.1:8118</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>取消</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只对github生效</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br><span class="line"><span class="comment"># 对所有生效</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><h2 id="WGET"><a href="#WGET" class="headerlink" title="WGET"></a>WGET</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat ~/.wgetrc</span></span><br><span class="line">use_proxy=yes</span><br><span class="line">http_proxy=http://127.0.0.1:8118</span><br><span class="line">https_proxy=http://127.0.0.1:8118</span><br><span class="line">no_proxy=<span class="string">".local"</span></span><br></pre></td></tr></table></figure><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><p><strong>设置</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:8118</span><br><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:8118</span><br><span class="line"><span class="built_in">export</span> no_proxy=<span class="string">".local"</span></span><br></pre></td></tr></table></figure><p><strong>取消</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> http_proxy</span><br><span class="line"><span class="built_in">unset</span> https_proxy</span><br><span class="line"><span class="built_in">unset</span> no_proxy</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;GIT&quot;&gt;&lt;a href=&quot;#GIT&quot; class=&quot;headerlink&quot; title=&quot;GIT&quot;&gt;&lt;/a&gt;GIT&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;设置&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 只对github生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global http.https://github.com.proxy socks5://127.0.0.1:1080&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 对所有生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global http.proxy http://127.0.0.1:8118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global https.proxy http://127.0.0.1:8118&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="linux" scheme="https://nichijou.me/tags/linux/"/>
    
      <category term="proxy" scheme="https://nichijou.me/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>Golang中使用Protobuf</title>
    <link href="https://nichijou.me/2019/12/22/Golang%E4%B8%AD%E4%BD%BF%E7%94%A8Protobuf/"/>
    <id>https://nichijou.me/2019/12/22/Golang%E4%B8%AD%E4%BD%BF%E7%94%A8Protobuf/</id>
    <published>2019-12-22T07:58:46.000Z</published>
    <updated>2020-06-06T11:50:11.147Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装protoc"><a href="#安装protoc" class="headerlink" title="安装protoc"></a>安装protoc</h2><p><code>https://github.com/protocolbuffers/protobuf/releases</code> 下载对应版本的protoc</p><h2 id="安装protoc-gen-go"><a href="#安装protoc-gen-go" class="headerlink" title="安装protoc-gen-go"></a>安装protoc-gen-go</h2><blockquote><p><a href="https://godoc.org/github.com/golang/protobuf/protoc-gen-go" target="_blank" rel="noopener">https://godoc.org/github.com/golang/protobuf/protoc-gen-go</a></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/golang/protobuf/protoc-gen-go</span><br></pre></td></tr></table></figure><h2 id="生成go文件"><a href="#生成go文件" class="headerlink" title="生成go文件"></a>生成go文件</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protoc --go_out=output_directory input_directory/file.proto</span><br></pre></td></tr></table></figure><h2 id="proto文件编写"><a href="#proto文件编写" class="headerlink" title="proto文件编写"></a>proto文件编写</h2><p><a href="https://developers.google.com/protocol-buffers/docs/proto3" target="_blank" rel="noopener">原文</a><br><a href="https://blog.csdn.net/u011518120/article/details/54604615" target="_blank" rel="noopener">译文</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装protoc&quot;&gt;&lt;a href=&quot;#安装protoc&quot; class=&quot;headerlink&quot; title=&quot;安装protoc&quot;&gt;&lt;/a&gt;安装protoc&lt;/h2&gt;&lt;p&gt;&lt;code&gt;https://github.com/protocolbuffers/proto
      
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="golang" scheme="https://nichijou.me/tags/golang/"/>
    
      <category term="protobuf" scheme="https://nichijou.me/tags/protobuf/"/>
    
  </entry>
  
  <entry>
    <title>公钥私钥对生成</title>
    <link href="https://nichijou.me/2019/10/30/%E9%80%9A%E8%BF%87%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5/"/>
    <id>https://nichijou.me/2019/10/30/%E9%80%9A%E8%BF%87%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5/</id>
    <published>2019-10-30T13:31:50.000Z</published>
    <updated>2020-06-06T11:35:11.843Z</updated>
    
    <content type="html"><![CDATA[<h2 id="生成公钥私钥对"><a href="#生成公钥私钥对" class="headerlink" title="生成公钥私钥对"></a>生成公钥私钥对</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><h2 id="通过私钥生成公钥"><a href="#通过私钥生成公钥" class="headerlink" title="通过私钥生成公钥"></a>通过私钥生成公钥</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -y -f id_rsa &gt; id_rsa.pub</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;生成公钥私钥对&quot;&gt;&lt;a href=&quot;#生成公钥私钥对&quot; class=&quot;headerlink&quot; title=&quot;生成公钥私钥对&quot;&gt;&lt;/a&gt;生成公钥私钥对&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="ssh" scheme="https://nichijou.me/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>PHP调用curl设置CURLOPT_TIMEOUT_MS小于1秒时无效</title>
    <link href="https://nichijou.me/2019/05/13/PHP%E8%B0%83%E7%94%A8curl%E8%AE%BE%E7%BD%AECURLOPT-TIMEOUT-MS%E5%B0%8F%E4%BA%8E1%E7%A7%92%E6%97%B6%E6%97%A0%E6%95%88/"/>
    <id>https://nichijou.me/2019/05/13/PHP%E8%B0%83%E7%94%A8curl%E8%AE%BE%E7%BD%AECURLOPT-TIMEOUT-MS%E5%B0%8F%E4%BA%8E1%E7%A7%92%E6%97%B6%E6%97%A0%E6%95%88/</id>
    <published>2019-05-13T08:41:04.000Z</published>
    <updated>2020-06-06T11:50:33.356Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用php调用curl时碰到一个奇怪的问题，现象为当CURLOPT_TIMEOUT_MS小于1000时，直接返回错误</p><p>代码如下：</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$ch = curl_init(<span class="string">'https://nichijou.me/'</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">// curl_setopt($ch, CURLOPT_NOSIGNAL, 1);</span></span><br><span class="line">curl_setopt($ch, CURLOPT_TIMEOUT_MS, <span class="number">200</span>);</span><br><span class="line">$data = curl_exec($ch);</span><br><span class="line">$curl_errno = curl_errno($ch);</span><br><span class="line">$curl_error = curl_error($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($curl_errno &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"cURL Error ($curl_errno): $curl_error\n"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Data received: $data\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// cURL Error (28): Timeout was reached</span></span><br></pre></td></tr></table></figure><p>翻了一下文档</p><blockquote><p><a href="https://www.php.net/manual/zh/function.curl-setopt.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/function.curl-setopt.php</a></p></blockquote><table><thead><tr><th><strong>选项</strong></th><th>将 <code>value</code> 设置为</th><th><strong>备注</strong></th></tr></thead><tbody><tr><td>CURLOPT_TIMEOUT_MS</td><td>设置cURL允许执行的最长毫秒数。 如果 libcurl 编译时使用系统标准的名称解析器（ standard system name resolver），那部分的连接仍旧使用以秒计的超时解决方案，最小超时时间还是一秒钟。</td><td>在 cURL 7.16.2 中被加入。从 PHP 5.2.3 起可使用。</td></tr></tbody></table><p>查解决办法的时候发现鸟哥早在14年就描述过这个问题</p><blockquote><p><a href="http://www.laruence.com/2014/01/21/2939.html" target="_blank" rel="noopener">http://www.laruence.com/2014/01/21/2939.html</a></p></blockquote><p>解决这个问题的几种方式: </p><ol><li>设置 <code>curl_setopt($ch, CURLOPT_NOSIGNAL, 1);</code>，但是会导致DNS解析不受控，万一DNS服务器出问题，可能会导致服务超时</li><li>升级libcurl版本到7.19及以上</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天使用php调用curl时碰到一个奇怪的问题，现象为当CURLOPT_TIMEOUT_MS小于1000时，直接返回错误&lt;/p&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="php" scheme="https://nichijou.me/tags/php/"/>
    
      <category term="curl" scheme="https://nichijou.me/tags/curl/"/>
    
  </entry>
  
  <entry>
    <title>Mac外接2k显示器开启HiDPI支持</title>
    <link href="https://nichijou.me/2019/05/13/Mac%E5%A4%96%E6%8E%A52k%E6%98%BE%E7%A4%BA%E5%99%A8%E5%BC%80%E5%90%AFHiDPI%E6%94%AF%E6%8C%81/"/>
    <id>https://nichijou.me/2019/05/13/Mac%E5%A4%96%E6%8E%A52k%E6%98%BE%E7%A4%BA%E5%99%A8%E5%BC%80%E5%90%AFHiDPI%E6%94%AF%E6%8C%81/</id>
    <published>2019-05-13T03:48:37.000Z</published>
    <updated>2020-06-06T11:50:42.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关闭SIP-System-Integrity-Protection"><a href="#关闭SIP-System-Integrity-Protection" class="headerlink" title="关闭SIP(System Integrity Protection)"></a>关闭SIP(System Integrity Protection)</h2><ol><li>关机</li><li>按住 <code>command+R</code> 开机</li><li>实用工具 -&gt; 终端</li><li>输入 <code>csrutil disable</code>，回车</li><li>重启系统</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-bash-3.2<span class="comment"># csrutil disable</span></span><br><span class="line">Successfully disabled System Integrity Protection. Please restart the machine <span class="keyword">for</span> the changes to take effect.</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="获取显示器DisplayVendorID和DisplayProductID"><a href="#获取显示器DisplayVendorID和DisplayProductID" class="headerlink" title="获取显示器DisplayVendorID和DisplayProductID"></a>获取显示器DisplayVendorID和DisplayProductID</h2><p>终端执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ioreg -l | grep <span class="string">"DisplayVendorID"</span></span><br><span class="line">ioreg -l | grep <span class="string">"DisplayProductID"</span></span><br></pre></td></tr></table></figure><p>记下 <code>DisplayVendorID</code> 和 <code>DisplayProductID</code></p><h2 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h2><blockquote><p><a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener">https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/</a></p></blockquote><p>在上面的地址填上刚才得到的 <code>DisplayVendorID</code> 和 <code>DisplayProductID</code>，得到配置和文件路径，把配置放到对应的路径</p><p><img src="https://img.nichijou.me/20191231003626.png" alt=""></p><h2 id="开启SIP-System-Integrity-Protection"><a href="#开启SIP-System-Integrity-Protection" class="headerlink" title="开启SIP(System Integrity Protection)"></a>开启SIP(System Integrity Protection)</h2><ol><li>关机</li><li>按住 <code>command+R</code> 开机</li><li>实用工具 -&gt; 终端</li><li>输入 <code>csrutil enable</code>，回车</li><li>重启系统</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-bash-3.2<span class="comment"># csrutil enable</span></span><br><span class="line">Successfully enabled System Integrity Protection. Please restart the machine <span class="keyword">for</span> the changes to take effect.</span><br></pre></td></tr></table></figure><h2 id="下载RDM"><a href="#下载RDM" class="headerlink" title="下载RDM"></a>下载RDM</h2><blockquote><p><a href="http://avi.alkalay.net/software/RDM/" target="_blank" rel="noopener">http://avi.alkalay.net/software/RDM/</a></p></blockquote><p>打开并选择需要的分辨率即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关闭SIP-System-Integrity-Protection&quot;&gt;&lt;a href=&quot;#关闭SIP-System-Integrity-Protection&quot; class=&quot;headerlink&quot; title=&quot;关闭SIP(System Integrity Protection)&quot;&gt;&lt;/a&gt;关闭SIP(System Integrity Protection)&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;关机&lt;/li&gt;
&lt;li&gt;按住 &lt;code&gt;command+R&lt;/code&gt; 开机&lt;/li&gt;
&lt;li&gt;实用工具 -&amp;gt; 终端&lt;/li&gt;
&lt;li&gt;输入 &lt;code&gt;csrutil disable&lt;/code&gt;，回车&lt;/li&gt;
&lt;li&gt;重启系统&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-bash-3.2&lt;span class=&quot;comment&quot;&gt;# csrutil disable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Successfully disabled System Integrity Protection. Please restart the machine &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the changes to take effect.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="Mac" scheme="https://nichijou.me/tags/Mac/"/>
    
      <category term="HiDPI" scheme="https://nichijou.me/tags/HiDPI/"/>
    
      <category term="2k" scheme="https://nichijou.me/tags/2k/"/>
    
      <category term="分辨率" scheme="https://nichijou.me/tags/%E5%88%86%E8%BE%A8%E7%8E%87/"/>
    
      <category term="显示器" scheme="https://nichijou.me/tags/%E6%98%BE%E7%A4%BA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>在PHP单元测试中Mock time 以及 date 等预置函数</title>
    <link href="https://nichijou.me/2019/05/07/%E5%9C%A8PHP%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B8%ADMock-time-%E4%BB%A5%E5%8F%8A-date-%E7%AD%89%E9%A2%84%E7%BD%AE%E5%87%BD%E6%95%B0/"/>
    <id>https://nichijou.me/2019/05/07/%E5%9C%A8PHP%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B8%ADMock-time-%E4%BB%A5%E5%8F%8A-date-%E7%AD%89%E9%A2%84%E7%BD%AE%E5%87%BD%E6%95%B0/</id>
    <published>2019-05-07T06:04:36.000Z</published>
    <updated>2020-06-06T11:50:48.662Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在单元测试时，有时候会碰到代码中使用了 <code>time</code>， <code>date</code> 等函数，然后根据这些函数的返回执行不同的分支。</p><p>这种情况下想要覆盖到所有分支，可以通过在相同命名空间下定义同名函数，来达到mock的目的</p><a id="more"></a><p>例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 待测代码</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">foo</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (time() &gt;= strtotime(<span class="string">'2019-01-01'</span>)) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 单元测试</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">foo</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">time</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strtotime(<span class="string">'2018-01-01'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考 <a href="https://stackoverflow.com/a/5337635" target="_blank" rel="noopener">https://stackoverflow.com/a/5337635</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在单元测试时，有时候会碰到代码中使用了 &lt;code&gt;time&lt;/code&gt;， &lt;code&gt;date&lt;/code&gt; 等函数，然后根据这些函数的返回执行不同的分支。&lt;/p&gt;
&lt;p&gt;这种情况下想要覆盖到所有分支，可以通过在相同命名空间下定义同名函数，来达到mock的目的&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="phpunit" scheme="https://nichijou.me/tags/phpunit/"/>
    
      <category term="单元测试" scheme="https://nichijou.me/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
      <category term="mock" scheme="https://nichijou.me/tags/mock/"/>
    
      <category term="date" scheme="https://nichijou.me/tags/date/"/>
    
      <category term="time" scheme="https://nichijou.me/tags/time/"/>
    
      <category term="预置函数" scheme="https://nichijou.me/tags/%E9%A2%84%E7%BD%AE%E5%87%BD%E6%95%B0/"/>
    
      <category term="php" scheme="https://nichijou.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Golang中的break label</title>
    <link href="https://nichijou.me/2019/04/20/Golang%E4%B8%AD%E7%9A%84break-label/"/>
    <id>https://nichijou.me/2019/04/20/Golang%E4%B8%AD%E7%9A%84break-label/</id>
    <published>2019-04-20T06:33:21.000Z</published>
    <updated>2020-06-06T11:50:55.380Z</updated>
    
    <content type="html"><![CDATA[<p>在Golang中，支持通过 <code>break</code> 的方式跳出循环。如果需要跳出多层循环，可以使用 <code>break label</code> 的方式实现。</p><p>不同于 <code>goto label</code>， <code>break label</code> 会在循环的下一条语句处开始继续执行，而 <code>goto label</code> 则会从 <code>label</code> 处继续往下执行。如果在下面的例子中把 <code>break label</code> 换成 <code>goto label</code>，则会导致再次进入循环。</p><a id="more"></a><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">TestLabelBreak:</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">fmt.Println(i)</span><br><span class="line"><span class="keyword">if</span> i == <span class="number">3</span> &#123;</span><br><span class="line"><span class="keyword">break</span> TestLabelBreak</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"end for"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 0</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// end for</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Golang中，支持通过 &lt;code&gt;break&lt;/code&gt; 的方式跳出循环。如果需要跳出多层循环，可以使用 &lt;code&gt;break label&lt;/code&gt; 的方式实现。&lt;/p&gt;
&lt;p&gt;不同于 &lt;code&gt;goto label&lt;/code&gt;， &lt;code&gt;break label&lt;/code&gt; 会在循环的下一条语句处开始继续执行，而 &lt;code&gt;goto label&lt;/code&gt; 则会从 &lt;code&gt;label&lt;/code&gt; 处继续往下执行。如果在下面的例子中把 &lt;code&gt;break label&lt;/code&gt; 换成 &lt;code&gt;goto label&lt;/code&gt;，则会导致再次进入循环。&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="golang" scheme="https://nichijou.me/tags/golang/"/>
    
      <category term="label" scheme="https://nichijou.me/tags/label/"/>
    
  </entry>
  
  <entry>
    <title>PHP实现18位社会统一信用码验证</title>
    <link href="https://nichijou.me/2019/04/17/PHP%E5%AE%9E%E7%8E%B018%E4%BD%8D%E7%A4%BE%E4%BC%9A%E7%BB%9F%E4%B8%80%E4%BF%A1%E7%94%A8%E7%A0%81%E9%AA%8C%E8%AF%81/"/>
    <id>https://nichijou.me/2019/04/17/PHP%E5%AE%9E%E7%8E%B018%E4%BD%8D%E7%A4%BE%E4%BC%9A%E7%BB%9F%E4%B8%80%E4%BF%A1%E7%94%A8%E7%A0%81%E9%AA%8C%E8%AF%81/</id>
    <published>2019-04-17T07:05:35.000Z</published>
    <updated>2020-06-06T11:51:01.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是社会统一信用码"><a href="#什么是社会统一信用码" class="headerlink" title="什么是社会统一信用码"></a>什么是社会统一信用码</h2><p><a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E7%A4%BE%E4%BC%9A%E4%BF%A1%E7%94%A8%E4%BB%A3%E7%A0%81" target="_blank" rel="noopener"><strong>统一社会信用代码</strong></a>是中国的法人和其他组织，在全国范围内唯一的、终身不变的18位法定身份识别码，旨在统一过去各部门下发的不同机构代码，由全国组织机构统一社会信用代码数据服务中心（NACAO，隶属<a href="https://zh.wikipedia.org/wiki/%E5%9B%BD%E5%AE%B6%E5%B8%82%E5%9C%BA%E7%9B%91%E7%9D%A3%E7%AE%A1%E7%90%86%E6%80%BB%E5%B1%80" target="_blank" rel="noopener">国家市场监督管理总局</a>）负责管理。</p><p>2015年6月11日国务院下发《国务院关于批转发展改革委等部门法人和其他组织统一社会信用代码制度建设总体方案的通知》（国发〔2015〕33号）后开始实施。</p><a id="more"></a><h2 id="信用码构成"><a href="#信用码构成" class="headerlink" title="信用码构成"></a>信用码构成</h2><p><a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86" target="_blank" rel="noopener">中华人民共和国国家标准</a><a href="https://zh.wikisource.org/wiki/GB_32100-2015_%E6%B3%95%E4%BA%BA%E5%92%8C%E5%85%B6%E4%BB%96%E7%BB%84%E7%BB%87%E7%BB%9F%E4%B8%80%E7%A4%BE%E4%BC%9A%E4%BF%A1%E7%94%A8%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A0%81%E8%A7%84%E5%88%99" target="_blank" rel="noopener">GB 32100-2015 法人和其他组织统一社会信用代码编码规则</a>中规定：统一代码由十八位的阿拉伯数字或大写英文字母（不使用I、O、Z、S、V）组成。</p><p>18位数字字母组合的方式是：</p><p><img src="https://img.nichijou.me/20190417230234.png" alt=""></p><ul><li><strong>登记管理部门码</strong>表示登记管理部分，使用阿拉伯数字或大写英文字母表示，1代表机构编制、5代表民政、9代表工商、Y代表其他。</li><li><strong>机构类别码</strong>表示登记机构的类别。</li><li><strong>登记管理机关行政区划码</strong>指的是登记机构所地的<a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92%E4%BB%A3%E7%A0%81" target="_blank" rel="noopener">行政区划代码</a>，如350100是福建省福州市。</li><li><strong>主体标识码（组织机构代码）</strong>是旧的组织机构代码，按照<a href="https://zh.wikisource.org/wiki/GB_11714-1997_%E5%85%A8%E5%9B%BD%E7%BB%84%E7%BB%87%E6%9C%BA%E6%9E%84%E4%BB%A3%E7%A0%81%E7%BC%96%E5%88%B6%E8%A7%84%E5%88%99" target="_blank" rel="noopener">GB 11714</a>编码。</li><li>最后一位是<strong>校验码</strong>，校验码计算方法参照GB/T 17710（采ISO 7064）。</li></ul><h2 id="编码规则"><a href="#编码规则" class="headerlink" title="编码规则"></a>编码规则</h2><p><a href="https://zh.wikisource.org/zh-hans/GB_32100-2015_法人和其他组织统一社会信用代码编码规则" target="_blank" rel="noopener">GB_32100-2015</a></p><h2 id="PHP实现"><a href="#PHP实现" class="headerlink" title="PHP实现"></a>PHP实现</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://zh.wikisource.org/zh-hans/GB_32100-2015_法人和其他组织统一社会信用代码编码规则</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validateUnifiedSocialCreditIdentifier</span><span class="params">($code)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'~^[0-9ABCDEFGHJKLMNPQRTUWXY]&#123;18&#125;$~'</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $code = strtoupper($code);</span><br><span class="line">    <span class="comment">// 18位统一社会信用代码不使用I、O、Z、S、V这五个英文字母</span></span><br><span class="line">    $alphaMap = [</span><br><span class="line">        <span class="string">'0'</span> =&gt; <span class="number">0</span>, <span class="string">'1'</span>  =&gt; <span class="number">1</span>, <span class="string">'2'</span>  =&gt; <span class="number">2</span>, <span class="string">'3'</span>  =&gt; <span class="number">3</span>, <span class="string">'4'</span>  =&gt; <span class="number">4</span>,</span><br><span class="line">        <span class="string">'5'</span> =&gt; <span class="number">5</span>, <span class="string">'6'</span>  =&gt; <span class="number">6</span>, <span class="string">'7'</span>  =&gt; <span class="number">7</span>, <span class="string">'8'</span>  =&gt; <span class="number">8</span>, <span class="string">'9'</span>  =&gt; <span class="number">9</span>,</span><br><span class="line">        <span class="string">'A'</span> =&gt; <span class="number">10</span>, <span class="string">'B'</span> =&gt; <span class="number">11</span>, <span class="string">'C'</span> =&gt; <span class="number">12</span>, <span class="string">'D'</span> =&gt; <span class="number">13</span>, <span class="string">'E'</span> =&gt; <span class="number">14</span>,</span><br><span class="line">        <span class="string">'F'</span> =&gt; <span class="number">15</span>, <span class="string">'G'</span> =&gt; <span class="number">16</span>, <span class="string">'H'</span> =&gt; <span class="number">17</span>, <span class="string">'J'</span> =&gt; <span class="number">18</span>, <span class="string">'K'</span> =&gt; <span class="number">19</span>,</span><br><span class="line">        <span class="string">'L'</span> =&gt; <span class="number">20</span>, <span class="string">'M'</span> =&gt; <span class="number">21</span>, <span class="string">'N'</span> =&gt; <span class="number">22</span>, <span class="string">'P'</span> =&gt; <span class="number">23</span>, <span class="string">'Q'</span> =&gt; <span class="number">24</span>,</span><br><span class="line">        <span class="string">'R'</span> =&gt; <span class="number">25</span>, <span class="string">'T'</span> =&gt; <span class="number">26</span>, <span class="string">'U'</span> =&gt; <span class="number">27</span>, <span class="string">'W'</span> =&gt; <span class="number">28</span>, <span class="string">'X'</span> =&gt; <span class="number">29</span>,</span><br><span class="line">        <span class="string">'Y'</span> =&gt; <span class="number">30</span>,</span><br><span class="line">    ];</span><br><span class="line">    $weight = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">27</span>, <span class="number">19</span>, <span class="number">26</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">29</span>, <span class="number">25</span>, <span class="number">13</span>, <span class="number">8</span>, <span class="number">24</span>, <span class="number">10</span>, <span class="number">30</span>, <span class="number">28</span>];</span><br><span class="line">    $chrs   = str_split($code);</span><br><span class="line">    $sum    = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (array_slice($chrs, <span class="number">0</span>, <span class="number">17</span>) <span class="keyword">as</span> $index =&gt; $chr) &#123;</span><br><span class="line">        $sum += $alphaMap[$chr] * $weight[$index];</span><br><span class="line">    &#125;</span><br><span class="line">    $checkNum     = <span class="number">31</span> - ($sum % <span class="number">31</span>);</span><br><span class="line">    $checkNum     = $checkNum == <span class="number">31</span> ? <span class="number">0</span> : $checkNum;</span><br><span class="line">    $flipAlphaMap = array_flip($alphaMap);</span><br><span class="line">    <span class="keyword">return</span> $chrs[<span class="number">17</span>] === (string) $flipAlphaMap[$checkNum];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// var_dump(true === validateUnifiedSocialCreditIdentifier('91310000736228569K')); // true</span></span><br><span class="line"><span class="comment">// var_dump(true === validateUnifiedSocialCreditIdentifier('91310115MA1K3M5G6H')); // true</span></span><br><span class="line"><span class="comment">// var_dump(true === validateUnifiedSocialCreditIdentifier('91310112MA1GBEGY17')); // true</span></span><br><span class="line"><span class="comment">// var_dump(true === validateUnifiedSocialCreditIdentifier('91310000MA1FL5DR4T')); // true</span></span><br><span class="line"><span class="comment">// var_dump(false === validateUnifiedSocialCreditIdentifier('11310000MA1FL5DR4T')); // true</span></span><br></pre></td></tr></table></figure><h2 id="错码问题"><a href="#错码问题" class="headerlink" title="错码问题"></a>错码问题</h2><p><strong>实际情况中存在少量社会统一信用码错码问题，比如：</strong></p><blockquote><p>福建思企互联网信息服务有限公司 (91350103M0001JFDX6)</p></blockquote><p><img src="https://img.nichijou.me/20190417230913.png" alt=""></p><blockquote><p>福州禾力顺电子商务有限公司 (91350102M0001PU72B)</p></blockquote><p><img src="https://img.nichijou.me/20190417231030.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是社会统一信用码&quot;&gt;&lt;a href=&quot;#什么是社会统一信用码&quot; class=&quot;headerlink&quot; title=&quot;什么是社会统一信用码&quot;&gt;&lt;/a&gt;什么是社会统一信用码&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BB%9F%E4%B8%80%E7%A4%BE%E4%BC%9A%E4%BF%A1%E7%94%A8%E4%BB%A3%E7%A0%81&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;统一社会信用代码&lt;/strong&gt;&lt;/a&gt;是中国的法人和其他组织，在全国范围内唯一的、终身不变的18位法定身份识别码，旨在统一过去各部门下发的不同机构代码，由全国组织机构统一社会信用代码数据服务中心（NACAO，隶属&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%9B%BD%E5%AE%B6%E5%B8%82%E5%9C%BA%E7%9B%91%E7%9D%A3%E7%AE%A1%E7%90%86%E6%80%BB%E5%B1%80&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;国家市场监督管理总局&lt;/a&gt;）负责管理。&lt;/p&gt;
&lt;p&gt;2015年6月11日国务院下发《国务院关于批转发展改革委等部门法人和其他组织统一社会信用代码制度建设总体方案的通知》（国发〔2015〕33号）后开始实施。&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="https://nichijou.me/categories/coding/"/>
    
    
      <category term="PHP" scheme="https://nichijou.me/tags/PHP/"/>
    
      <category term="社会统一信用码" scheme="https://nichijou.me/tags/%E7%A4%BE%E4%BC%9A%E7%BB%9F%E4%B8%80%E4%BF%A1%E7%94%A8%E7%A0%81/"/>
    
      <category term="验证" scheme="https://nichijou.me/tags/%E9%AA%8C%E8%AF%81/"/>
    
  </entry>
  
</feed>
